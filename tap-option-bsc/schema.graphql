type AdjustMarketExpiry @entity(immutable: true) {
  id: Bytes!
  OptionMarket_id: Bytes! # bytes32
  minExpiry: BigInt! # uint32
  maxExpiry: BigInt! # uint32
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type AdjustMarketReward @entity(immutable: true) {
  id: Bytes!
  OptionMarket_id: Bytes! # bytes32
  reward: Int! # uint16
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Bearish @entity(immutable: true) {
  id: Bytes!
  OptionMarket_id: Bytes! # bytes32
  tournamentId: BigInt! # uint256
  account: Bytes! # address
  positionId: Bytes! # bytes32
  expiry: BigInt! # uint256
  stake: BigInt! # uint256
  price: BigInt! # int64
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Bullish @entity(immutable: true) {
  id: Bytes!
  OptionMarket_id: Bytes! # bytes32
  tournamentId: BigInt! # uint256
  account: Bytes! # address
  positionId: Bytes! # bytes32
  expiry: BigInt! # uint256
  stake: BigInt! # uint256
  price: BigInt! # int64
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Claim @entity(immutable: true) {
  id: Bytes!
  tournamentId: BigInt! # uint256
  account: Bytes! # address
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type CollectFees @entity(immutable: true) {
  id: Bytes!
  collector: Bytes! # address
  recipient: Bytes! # address
  token: Bytes! # address
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type CreateMarket @entity(immutable: true) {
  id: Bytes!
  OptionMarket_id: Bytes! # bytes32
  creator: Bytes! # address
  reward: Int! # uint16
  minInterval: BigInt! # uint32
  maxInterval: BigInt! # uint32
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ExtendTournament @entity(immutable: true) {
  id: Bytes!
  tournamentId: BigInt! # uint256
  endTime: BigInt! # uint64
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type GrantOperatorRole @entity(immutable: true) {
  id: Bytes!
  account: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type OwnershipTransferred @entity(immutable: true) {
  id: Bytes!
  prevOwner: Bytes! # address
  newOwner: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Pause @entity(immutable: true) {
  id: Bytes!
  OptionMarket_id: Bytes! # bytes32
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Purge @entity(immutable: true) {
  id: Bytes!
  OptionMarket_id: Bytes! # bytes32
  tournamentId: BigInt! # uint256
  account: Bytes! # address
  positionId: Bytes! # bytes32
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RecoverToken @entity(immutable: true) {
  id: Bytes!
  currency: Bytes! # address
  recipient: Bytes! # address
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Refill @entity(immutable: true) {
  id: Bytes!
  tournamentId: BigInt! # uint256
  account: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RevokeOperatorRole @entity(immutable: true) {
  id: Bytes!
  account: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Settle @entity(immutable: true) {
  id: Bytes!
  OptionMarket_id: Bytes! # bytes32
  tournamentId: BigInt! # uint256
  account: Bytes! # address
  positionId: Bytes! # bytes32
  reward: BigInt! # uint256
  closingPrice: BigInt! # int64
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type SettleTournament @entity(immutable: true) {
  id: Bytes!
  tournamentId: BigInt! # uint256
  operator: Bytes! # address
  merkleRoot: Bytes! # bytes32
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type SignUp @entity(immutable: true) {
  id: Bytes!
  tournamentId: BigInt! # uint256
  account: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type StartTournament @entity(immutable: true) {
  id: Bytes!
  tournamentId: BigInt! # uint256
  initiator: Bytes! # address
  currency: Bytes! # address
  prizePool: BigInt! # uint256
  entryFee: BigInt! # uint256
  winners: BigInt! # uint64
  startTime: BigInt! # uint64
  endTime: BigInt! # uint64
  lot: BigInt! # uint64
  title: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type UnPause @entity(immutable: true) {
  id: Bytes!
  OptionMarket_id: Bytes! # bytes32
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
